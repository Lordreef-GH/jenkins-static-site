version: "3.9"
services:
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    user: root
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - web_content:/var/www/site
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - JAVA_HOME=/opt/java/openjdk
      - PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    # Install Docker CLI at container start (Debian-based image)
    # Uses the host Docker engine via mounted socket above
    entrypoint: [
      "/bin/sh",
      "-c",
      "set -e; \
      if ! command -v docker >/dev/null 2>&1; then \
        apt-get update && apt-get install -y ca-certificates curl gnupg lsb-release && \
        mkdir -p /usr/share/keyrings && \
        curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --yes --no-tty --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
        echo \"deb [arch=$$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $$(. /etc/os-release; echo $$VERSION_CODENAME) stable\" > /etc/apt/sources.list.d/docker.list && \
        apt-get update && apt-get install -y docker-ce-cli; \
      fi; \
      exec /usr/local/bin/jenkins.sh"
    ]
    restart: unless-stopped
  web:
    image: nginx:alpine
    container_name: web
    ports:
      - "8081:80"
    volumes:
      - web_content:/usr/share/nginx/html:ro
    restart: unless-stopped
volumes:
  jenkins_home:
  web_content: